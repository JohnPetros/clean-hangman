name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build app
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
          - os: windows-2019
    steps:
      - name: Install tk on ubuntu
        if: ${{ matrix.config.os == 'ubuntu-22.04'}}
        run: |
          sudo apt-get update
          sudo apt install python3-tk python3-dev python3-setuptools tcl

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install dependencies for ${{ matrix.config.os }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with pyinstaller for ${{ matrix.config.os }}
        run: pyinstaller packages/main.py --onefile --noconsole

      - name: Rename built app
        run: mv./dist./dist-${{ matrix.config.os }}

      - name: Upload result job ${{ matrix.config.os }}
        uses: actions/upload-artifact@v3
        with:
          name: tradutor-pyinstaller-artifact
          path:./dist*

  image:
    name: Docker Image Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build push
        uses: docker/build-push-action@v3.2.0
        with:
          context:./packages
          file:./Dockerfile
          push: true
          tags: |
            joaopetros/clean-hangman:${{ github.run_number }}
            joaopetros/clean-hangman:latest

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: tradutor-pyinstaller-artifact

      - name: Zip file windows
        run: zip -r clean_hangman_windows.zip dist-windows-*

      - name: Zip file ubuntu
        run: zip -r clean_hangman_ubuntu.zip dist-ubuntu-*

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            clean_hangman_windows.zip
            clean_hangman_ubuntu.zip
